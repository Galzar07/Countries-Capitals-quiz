{"version":3,"sources":["components/Question.js","components/Answers.js","App.js","index.js"],"names":["Question","props","country","Answers","answers","map","answer","key","name","className","capital","onClick","check","App","state","data","points","isCorected","counter","drawCountry","i","index","Math","floor","random","length","push","splice","correctId","setState","checkAnswer","e","target","innerText","fetch","method","headers","then","response","json","catch","err","console","log","wynik","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAUeA,G,MARE,SAACC,GAChB,OACE,6BACE,4BAAqB,KAAhBA,EAAMC,QAAe,sBAArB,8BAAmED,EAAMC,QAAzE,SCYIC,EAhBC,SAACF,GAGf,IAAMG,EAAUH,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAChC,yBAAKC,IAAKD,EAAOE,KAAMC,UAAU,UACX,KAAnBH,EAAOI,QACN,4BAAQC,QAASV,EAAMW,OAAQN,EAAOI,SAEtC,4BAAQC,QAASV,EAAMW,OAAvB,SAKN,OAAO,6BAAMR,ICoFAS,E,4MA5FbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,EACRd,QAAS,GACTQ,QAAS,GACTN,QAAS,GACTa,YAAY,EACZC,QAAS,G,EAsBXC,YAAc,WAGZ,IAFA,IAAIJ,EAAI,YAAO,EAAKD,MAAMC,MACpBX,EAAU,GACPgB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWT,EAAKU,QAC9CrB,EAAQsB,KAAKX,EAAKM,IAClBN,EAAKY,OAAON,EAAM,GAEpB,IAAMO,EAAYN,KAAKC,MAAsB,EAAhBD,KAAKE,UAElC,EAAKK,SAAS,CACZ3B,QAASE,EAAQwB,GAAWpB,KAC5BE,QAASN,EAAQwB,GAAWlB,QAC5BN,a,EAIJ0B,YAAc,SAACC,GAGXA,EAAEC,OAAOC,YAAc,EAAKnB,MAAMJ,SACV,KAAvB,EAAKI,MAAMJ,SAAyC,MAAvBqB,EAAEC,OAAOC,WAEvC,EAAKJ,SAAS,CACZb,OAAQ,EAAKF,MAAME,OAAS,EAC5BE,QAAS,EAAKJ,MAAMI,QAAU,IAEhCa,EAAEC,OAAOvB,WAAa,aAEtB,EAAKoB,SAAS,CACZX,QAAS,EAAKJ,MAAMI,QAAU,IAEhCa,EAAEC,OAAOvB,WAAa,e,kEAnDL,IAAD,OAClByB,MAAM,+DAAgE,CACpEC,OAAQ,MACRC,QAAS,CACP,kBAAmB,2CACnB,iBAAkB,wDAGnBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACtB,GACL,EAAKc,SAAS,CACZd,YAGHyB,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,+BAyChB,IAAMG,EAAQC,KAAK/B,MAAMI,SAAU,EAAI2B,KAAK/B,MAAME,OAClD6B,KAAK/B,MAAME,OAAQ,IAAK6B,KAAK/B,MAAMI,QACnC,OACE,yBAAKT,UAAU,aACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,CAAUP,QAAS2C,KAAK/B,MAAMZ,UAC9B,kBAAC,EAAD,CACEQ,QAASmC,KAAK/B,MAAMJ,QACpBN,QAASyC,KAAK/B,MAAMV,QACpBQ,MAAOiC,KAAKf,YACZb,WAAY4B,KAAK/B,MAAMG,aAEzB,yBAAKR,UAAU,UACb,4BAAQA,UAAU,OAAOE,QAASkC,KAAK1B,aACpC0B,KAAK/B,MAAMI,QAAU,OAAS,SAEjC,sCACU0B,U,GApFJE,aCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7398f610.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Question = (props) => {\r\n  return (\r\n    <div>\r\n      <h3>{props.country===\"\" ? \"what capital is it?\": `what is the capital ${props.country}?`}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nconst Answers = (props) => {\r\n\r\n    \r\n  const answers = props.answers.map((answer) => (\r\n    <div key={answer.name} className=\"answer\">\r\n      {answer.capital !== \"\" ? (\r\n        <button onClick={props.check}>{answer.capital}</button>\r\n      ) : (\r\n        <button onClick={props.check}>x</button>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return <div>{answers}</div>;\r\n};\r\n\r\nexport default Answers;\r\n","import React, { Component } from \"react\";\nimport \"./style/App.css\";\nimport Question from \"./components/Question\";\nimport Answers from \"./components/Answers\";\n\nclass App extends Component {\n  state = {\n    data: [],\n    points: 0,\n    country: \"\",\n    capital: \"\",\n    answers: [],\n    isCorected: false,\n    counter: 0,\n  };\n\n  componentDidMount() {\n    fetch(\"https://ajayakv-rest-countries-v1.p.rapidapi.com/rest/v1/all\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"ajayakv-rest-countries-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"9bfdc4ea8dmsh88f4ab710ed6562p15f1fcjsn7069fd957510\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          data,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  drawCountry = () => {\n    let data = [...this.state.data];\n    const answers = [];\n    for (let i = 0; i < 4; i++) {\n      const index = Math.floor(Math.random() * data.length);\n      answers.push(data[index]);\n      data.splice(index,1);\n    }\n    const correctId = Math.floor(Math.random() * 4);\n\n    this.setState({\n      country: answers[correctId].name,\n      capital: answers[correctId].capital,\n      answers,\n    });\n  };\n\n  checkAnswer = (e) => {\n\n    if (\n      e.target.innerText === this.state.capital ||\n      (this.state.capital === \"\" && e.target.innerText === \"x\")\n    ) {\n      this.setState({\n        points: this.state.points + 1,\n        counter: this.state.counter + 1,\n      });\n      e.target.className += \" correct\";\n    } else {\n      this.setState({\n        counter: this.state.counter + 1,\n      });\n      e.target.className += \" incorrect\";\n    }\n  };\n\n  render() {\n    const wynik = this.state.counter <=0 ? this.state.points : \n    this.state.points+ \"/\" +this.state.counter\n    return (\n      <div className=\"container\">\n        <div className=\"card\">\n          <Question country={this.state.country} />\n          <Answers\n            capital={this.state.capital}\n            answers={this.state.answers}\n            check={this.checkAnswer}\n            isCorected={this.state.isCorected}\n          />\n          <div className=\"result\">\n            <button className=\"next\" onClick={this.drawCountry}>\n              {this.state.counter ? \"next\" : \"start\"}\n            </button>\n            <h3>\n              Score: {wynik }\n            </h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}